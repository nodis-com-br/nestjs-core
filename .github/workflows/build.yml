name: Build

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout :)
        uses: actions/checkout@v2.3.1

      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@nodis-com-br'

      - name: Cache dependencies ⚙️
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies ⏳
        run: yarn --frozen-lockfile

      - name: Build ⚒
        run: yarn build

      - name: "Publish Artefacts"
        uses: actions/upload-artifact@v2.3.1
        with:
          name: ubuntu-latest
          path: |
            ./dist
            package.json

  push-github-packages:
    name: "Push GitHub Packages"
    needs: build
    if: github.event_name == 'release'
    environment:
      name: "GitHub Packages"
      url: https://github.com/nodis-com-br/nestjs-core/packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout :)
        uses: actions/checkout@v2.3.1
        with:
          ref: main

      - name: "Download Artefact"
        uses: actions/download-artifact@v3
        with:
          name: "ubuntu-latest"

      - uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@nodis-com-br'

      - name: "Get latest release"
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft|prerelease"
          view_top: 1

      - name: Setup GIT
        run: git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com" && git config --global user.name "$GITHUB_ACTOR"

      - name: Versioning release
        run: yarn bump ${{ steps.last_release.outputs.tag_name }}

      - name: Publish changes GIT
        run: git add package.json && git commit -m "Bump version" && git push

      - name: Move to deploy folder
        run: mkdir deploy && mv dist package.json deploy

      - run: yarn publish deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}